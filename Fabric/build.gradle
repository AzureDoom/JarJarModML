plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

archivesBaseName = "${mod_name}-fabric-${minecraft_version}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    compileOnly project(":Common")
    modImplementation "mod.azure.azurelib:azurelib-fabric-1.20:${azurelib_version_fabric}"
    modImplementation "maven.modrinth:midnightlib:1.4.0"
    modImplementation("com.terraformersmc:modmenu:7.0.0-beta.2")
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runServer")
        }
    }
    accessWidenerPath = file("${project(':Common').projectDir.path}/src/main/resources/${mod_id}_common.accesswidener")
    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

if (file('key.properties').exists()) {
    curseforge {

        def curseProp = new Properties()
        File secretPropsFile = file("key.properties")
        curseProp.load(secretPropsFile.newInputStream())

        project {
            apiKey = curseProp.getProperty('curseKey')
            id = "394527"
            releaseType = "release"
            changelogType = 'text'
            changelog = file('CHANGELOG.txt')
            addGameVersion("1.20")
            addGameVersion("Fabric")
            addGameVersion("Java 17")

            relations {
                requiredDependency 'fabric-api'
                requiredDependency 'azurelib'
                requiredDependency 'midnightlib'
            }
            mainArtifact(remapJar)

            afterEvaluate {
                uploadTask.dependsOn("remapJar")
            }
        }
        options {
            //debug = true
            forgeGradleIntegration = false
        }
    }
}

if (file('key.properties').exists()) {
    modrinth {
        def modrinthProp = new Properties()
        File secretPropsFile = file("key.properties")
        modrinthProp.load(secretPropsFile.newInputStream())

        token = modrinthProp.getProperty('modrinthKey')
        projectId = 'Zhqc8UeQ'
        versionNumber = project.version
        versionName = 'Fabric 1.20'
        uploadFile = remapJar
        changelog = rootProject.file("changelog.txt").text
        gameVersions = ['1.20']
        loaders = ['fabric']
        dependencies {
            required.project "azurelib"
            required.project "midnightlib"
            required.project "fabric-api"
        }
    }
}
